@page "/creaproducto"
@using LIstaProductos.Shared.DTO;
@inject IHttpServicio http
@inject NavigationManager navegador
<h3>Crear Producto</h3>
<EditForm Model="prod" OnValidSubmit="Aceptar">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Código</label>
        <div>
            <InputText class="form-control" @bind-Value="@prod.Codigo" />
            <ValidationMessage For="@(() => prod.Codigo)" />
        </div>
    </div>
    <br/>
    <div class="form-group">
        <label>Nombre</label>
        <div>
            <InputText class="form-control" @bind-Value="@prod.Nombre" />
            <ValidationMessage For="@(() => prod.Nombre)" />
        </div>
    </div>
    <br />
    <div class="form-group">
        <label>Precio</label>
            <div>
                <InputNumber class="form-control" @bind-Value="@prod.Precio" />
            <ValidationMessage For="@(() => prod.Precio)" />
        </div>
    </div>
    <br />
    <button class="btn btn-primary" type="submit">Aceptar</button>
    <button class="btn btn-secondary" @onclick=@(()=>Limpiar())>Limpiar</button>
    <button class="btn btn-secondary" @onclick=@(()=>Salir())>Salir</button>
    <br />
    <br />
    <h5>@mensaje</h5>
</EditForm>

@code {
    ProductoDTO prod = new ProductoDTO();
    string mensaje = "";

    private async void Aceptar()
    {
        var httpRespuesta = await http.Post<ProductoDTO>("api/productos", prod);
        if (httpRespuesta.Error)
        {
            mensaje = httpRespuesta.ObtenerError().ToString();
        }
        else
        {
            navegador.NavigateTo("/productos");
        }
    }

    private void Limpiar()
    {
        prod.Codigo = "";
        prod.Nombre = "";
        prod.Precio = 0;
        mensaje = " ";
    }

    private void Salir()
    {
        navegador.NavigateTo("/productos");
    }

}
